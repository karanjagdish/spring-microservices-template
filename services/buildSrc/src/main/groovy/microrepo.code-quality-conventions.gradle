plugins {
    id "jacoco"
    id "com.diffplug.spotless"
    id "com.github.andygoossens.gradle-modernizer-plugin"
    id "io.spring.nohttp"
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    executionData tasks.withType(Test)
    classDirectories.from = files(sourceSets.main.output.classesDirs)
    sourceDirectories.from = files(sourceSets.main.java.srcDirs)

    reports {
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

//spotless {
//    java {
//        target 'src/*/java/**/*.java'
//        removeUnusedImports()
//    }
//}

spotless {
    // optional: limit format enforcement to just the files changed by this feature branch
//    ratchetFrom 'origin/main'

    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '.gitattributes', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
        endWithNewline()
    }
    java {
        // don't need to set target, it is inferred from java
        target 'src/*/java/**/*.java'
        // apply a specific flavor of google-java-format
//        googleJavaFormat('1.24.0').aosp().reflowLongStrings()
        palantirJavaFormat('2.39.0').formatJavadoc(true)
        // fix formatting of type annotations
        formatAnnotations()
    }
}

modernizer {
    failOnViolations = true
    includeTestClasses = true
}

nohttp {
    source.include "build.gradle", "README.md"
}

dependencies {
    implementation 'com.google.googlejavaformat:google-java-format:1.24.0'
}